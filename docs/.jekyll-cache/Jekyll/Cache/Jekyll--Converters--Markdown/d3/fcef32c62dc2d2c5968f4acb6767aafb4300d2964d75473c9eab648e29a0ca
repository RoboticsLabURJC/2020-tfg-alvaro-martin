I"x<p>Hello all!</p>

<p>This week I’ve been a bit more busy with the course beginning, but I’ve made some updates. While testing the Follow Line Game Synchronous on different subnets, appeared 
an issue, wich is that if the users are behind some types of NATs, the connection with only a STUN server won’t work. In order to solve this problem I read in many articles
that in this cases a TURN server is needed.</p>

<p>Before deploying a TURN server in our test machine, I started by reading how the STUN protocol works and how a client communicates with the server (<a href="https://datatracker.ietf.org/doc/html/rfc5766">rfc5766</a>).
When I knew how the protocol worked, I started to deploy the server on our machine using <a href="https://github.com/coturn/coturn">coturn</a>, an open-source TURN server developed in C Languaje.
I got stuck many times while <a href="https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/">testing</a> the server was working fine, but finally I solved every issue. This is the configuration I used to deploy the server in a Docker Container:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker run <span class="nt">-d</span> <span class="nt">--network</span><span class="o">=</span>host coturn/coturn <span class="nt">-n</span> <span class="nt">--log-file</span><span class="o">=</span>stdout <span class="nt">--listening-port</span><span class="o">=</span>20500 <span class="nt">--listening-ip</span><span class="o">=</span>212.128.254.32 <span class="nt">--relay-ip</span><span class="o">=</span>212.128.254.32 <span class="nt">--user</span><span class="o">=</span>danielhervas:danielhervas <span class="nt">--lt-cred-mech</span> <span class="nt">--verbose</span> <span class="nt">--realm</span><span class="o">=</span>test.unibotics.org

</code></pre></div></div>
:ET